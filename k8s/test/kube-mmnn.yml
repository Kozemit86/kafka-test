---
-
  become: true
  hosts: all
  become_method: sudo
  become_user: root
  tasks:
# ----- /etc/hosts ---------------------
  - name: Add host /etc/hosts
    copy:
      dest: "/etc/hosts"
      content: |
        127.0.0.1 localhost
        192.168.1.110 kube-master01
        192.168.1.120 kube-master02
        192.168.1.210 kube-node01
        192.168.1.220 kube-node02

  - name: Disabled AutoUpdate
    copy:
      dest: "/etc/apt/apt.conf.d/20auto-upgrades"
      content: |
        APT::Periodic::Update-Package-Lists "0";
        APT::Periodic::Unattended-Upgrade "0";

#  - name: Unconditionally reboot the machine with all defaults
#    ansible.builtin.reboot:

  - name: Update APT
    apt:
      update_cache: yes


  - name: Install packeges
    apt:
      name:
        - apt-transport-https
        - curl
        - wget
        - git

  - name: Swap-Off
    shell: swapoff -a

  - name: Changes /etc/fstab
    ansible.builtin.lineinfile:
      path: /etc/fstab
      state: absent
      regexp: 'swap'

  - name: Changes /etc/modules-load.d/modules.conf
    ansible.builtin.lineinfile:
      path: /etc/modules-load.d/modules.conf
      line: br_netfilter \noverlay
      create: yes

  - name: Creating /etc/sysctl.d/kube.conf
    ansible.builtin.lineinfile:
      path: /etc/sysctl.d/kube.conf
      line: net.bridge.bridge-nf-call-iptables = 1
      create: yes

#  - name: UFW disabled
#    community.general.ufw:
#      state: disabled

  - name: Install Docker
    apt:
      name:
        - docker
        - docker.io

  - name: Creating /etc/docker/daemon.json
    copy:
      dest: "/etc/docker/daemon.json"
      content: |
        {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
        "max-size": "100m"
        },
        "storage-driver": "overlay2",
        "storage-opts": [
        "overlay2.override_kernel_check=true"
        ]
        }

  - name: Restart Docker
    service:
      name: "docker"
      state: "restarted"
      enabled: "yes"

  - name: Add apt-key
    shell: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -

  - name: Creating /etc/apt/sources.list.d/kubernetes.list
    ansible.builtin.lineinfile:
      path: /etc/apt/sources.list.d/kubernetes.list
      line: deb https://apt.kubernetes.io/ kubernetes-xenial main
      create: yes

  - name: Update APT
    apt:
      update_cache: yes

  - name: Install kubelet kubeadm kubectl
    apt:
      name:
        - kubelet
        - kubeadm
        - kubectl

  - name: Disabled update kubelet kubeadm kubectl
    shell: apt-mark hold kubelet kubeadm kubectl

-
  become: true
  hosts: kube-masters
  become_method: sudo
  become_user: root
  tasks:
  - name: Install etcd
    apt:
      name:
        - etcd

  - name: Edit /etc/default/etcd
    copy:
      dest: "/etc/default/etcd"
      content: |
        ETCD_NAME="kube-etcd"
        ETCD_LISTEN_PEER_URLS="http://{{ansible_host}}:2380"
        ETCD_LISTEN_CLIENT_URLS="http://{{ansible_host}}:2379"
        ETCD_INITIAL_ADVERTISE_PEER_URLS="http://{{ansible_host}}:2380"
        ETCD_INITIAL_CLUSTER="kube-etcd=http://{{ansible_host}}:2380"
        ETCD_INITIAL_CLUSTER_STATE="new"
        ETCD_INITIAL_CLUSTER_TOKEN="etcd-cluster"
        ETCD_ADVERTISE_CLIENT_URLS="http://{{ansible_host}}:2379"
        ETCD_ADVERTISE_CLIENT_URLS="http://{{ansible_host}}:2379"

  - name: Edit service config etcd
    lineinfile: dest=/usr/lib/systemd/system/etcd.service
                regexp='^Type='
                insertbefore=BOF
                line='Type=idle'

  - name: Restart etcd
    service:
      name: "etcd"
      state: "restarted"
      enabled: "yes"
