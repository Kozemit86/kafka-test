---
-
  become: true
  hosts: all
  become_method: sudo
  become_user: root
  tasks:
# ----- /etc/hosts ---------------------
  - name: Add host /etc/hosts
    copy:
      dest: "/etc/hosts"
      content: |
        127.0.0.1 localhost
        {{ hostvars['master01'].ansible_host }} {{ hostvars['master01'].inventory_hostname }}
        {{ hostvars['worknode01'].ansible_host }} {{ hostvars['worknode01'].inventory_hostname }}
        {{ hostvars['worknode02'].ansible_host }} {{ hostvars['worknode02'].inventory_hostname }}
# --------------------------------------
  - name: Disabled AutoUpdate
    copy:
      dest: "/etc/apt/apt.conf.d/20auto-upgrades"
      content: |
        APT::Periodic::Update-Package-Lists "0";
        APT::Periodic::Unattended-Upgrade "0";

  - name: Disabled systemd-udevd
    shell: systemctl disable systemd-udevd systemd-udevd-control.socket systemd-udevd-kernel.socket

  - name: Stop systemd-udevd
    shell: systemctl stop systemd-udevd systemd-udevd-control.socket systemd-udevd-kernel.socket

  - name: Chmod systemd-udevd
    shell: chmod -x /usr/lib/systemd/systemd-udevd

#  - name: Selinux Disabled
#    lineinfile: dest=/etc/selinux/config
#                regexp='^SELINUX='
#                insertbefore=BOF
#                line='SELINUX=disabled'

#  - name: UFW disabled
#    community.general.ufw:
#      state: disabled

  - name: Unconditionally reboot the machine with all defaults
    ansible.builtin.reboot:

  - name: Update APT
    apt:
      update_cache: yes

  - name: Install packeges
    apt:
      name:
        - apt-transport-https
        - curl
        - wget
        - git

  - name: Swap-Off
    shell: swapoff -a

  - name: Changes /etc/fstab
    ansible.builtin.lineinfile:
      path: /etc/fstab
      state: absent
      regexp: 'swap'

  - name: Changes /etc/modules-load.d/modules.conf
    ansible.builtin.lineinfile:
      path: /etc/modules-load.d/modules.conf
      line: br_netfilter \noverlay
      create: yes

  - name: Creating /etc/sysctl.d/kube.conf
    ansible.builtin.lineinfile:
      path: /etc/sysctl.d/kube.conf
      line: net.bridge.bridge-nf-call-iptables = 1
      create: yes

  - name: Install Docker
    apt:
      name:
        - docker
        - docker.io

  - name: Creating /etc/docker/daemon.json
    copy:
      dest: "/etc/docker/daemon.json"
      content: |
        {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
        "max-size": "100m"
        },
        "storage-driver": "overlay2",
        "storage-opts": [
        "overlay2.override_kernel_check=true"
        ]
        }

  - name: Restart Docker
    service:
      name: "docker"
      state: "restarted"
      enabled: "yes"

  - name: Add apt-key
    shell: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -

  - name: Creating /etc/apt/sources.list.d/kubernetes.list
    ansible.builtin.lineinfile:
      path: /etc/apt/sources.list.d/kubernetes.list
      line: deb https://apt.kubernetes.io/ kubernetes-xenial main
      create: yes

  - name: Update APT
    apt:
      update_cache: yes

  - name: Install kubelet kubeadm kubectl
    apt:
      name:
        - kubelet
        - kubeadm
        - kubectl

  - name: Disabled update kubelet kubeadm kubectl
    shell: apt-mark hold kubelet kubeadm kubectl

  - name: Pause for 1 minutes to build app cache
    pause:
      minutes: 1

-
  become: true
  hosts: masters
  become_method: sudo
  become_user: root
  tasks:
  - name: Init master & pod-network
    shell: kubeadm init --pod-network-cidr=10.244.0.0/16

  - name: Pause for 1 minutes to build app cache
    pause:
      minutes: 1

  - name: Export KUBECONFIG
    shell: export KUBECONFIG=/etc/kubernetes/admin.conf

  - name: Export KUBECONFIG config
    ansible.builtin.lineinfile:
      path: /etc/environment
      line: export KUBECONFIG=/etc/kubernetes/admin.conf
      create: yes

# -------------- Ubuntu 20.04 LTS ----------------------

  - name: Apply flannel
    shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
###    shell: kubectl apply -f https://github.com/simff/test/blob/master/k8s/kube-flannel.yml

# ------------------------------------------------------

# -------------- Ubuntu 22.04 LTS ----------------------

#  - name: Apply flannel
#    shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

#  - name: Apply flannel2
#    shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/k8s-manifests/kube-flannel-rbac.yml

# ------------------------------------------------------

  - name: Pause for 1 minutes to build app cache
    pause:
      minutes: 1

  - name: get join command
    shell: kubeadm token create --print-join-command
    register: join_command_raw

  - name: set join command
    set_fact:
      join_command: "{{ join_command_raw.stdout_lines[0] }}"

-
  become: true
  hosts: worknodes
  become_method: sudo
  become_user: root
  tasks:
  - name: join cluster
    shell: "{{ hostvars['master01'].join_command }}"  # set primary master
